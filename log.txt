T -8 hours:
Posted "Im In": https://ldjam.com/events/ludum-dare/40/$55793/im-in
Brushing up on WebGl using the MDN guide: https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial
Rendered the Utah Teapot successfully! I've been wanting to do that since I was 8 years old.

T -6 hours:
Having a rough time with loading textures using webgl-obj-loader.js. Not sure if I set up UVs properly in Blender for the teapot.

T -4 hours:
Textured a teapot! UVs are crap but I loaded the image properly. The "index" concept of the WebGL interface had me confused - when you set up a program you note the indices where attributes and uniforms (shader variable types) exist in the shader bodies. Later on when you're actually drawing you 1. bind to a buffer, then 2. call vertexAttribPointer

T -2.5 hours:
Lighting, and incorporated GIF recording into the warmup project. Starting to get the hang of adding uniforms and attributes.

T +1 hour:
Brainstorming on the theme: "The more you have, the worse it gets." Since I want to work with AR or face tracking, my ideas mostly revolve around things in view of a webcam. Tribbles piling up. Something cooperative with multiple people's faces in a frame. Facebook profile filters. Snapchat filters that get rated for style points.

T +2.5 hours:
Spent 45 minutes futzing with webpack + webgazer.js. Webgazer is built out of a bunch of window-dependent IIFEs that apparently disagree with Webpack + Babel. Moving on to a more plain setup so as not to waste time.

T +5 hours:
I've invested in tracking.js, and have succeeded in identifying a user's left and right eyes. This will allow me to determine the angle and size of the player's face.

T +6 hours:
I've successfully estimated the midbrow, z rotation of the face, and rough position of the mouth.

T +13 hours:
Out of coffee

T +14 hours:
Got coffee. Starting to think about incorporating webGL.

T +18 hours:
Successfully projecting from the canvas positions to move and rotate the 3D mask. Going to work on overlays next. Still need to figure out mask distance based on eye distance.

T +19 hours:
Figured out z depth. Spent a lot of time reading up on the rule of similar triangles. Only thing that makes me hesitant about this is figuring out FOV of the average user's webcam. Just guessing at 90 degrees for now.

T +21 hours:
Mostly cleaning up the project and trying out silly masks! I need to get back on the "game mechanic" - side of things. Thinking about getting Vue set up. Had an idea about combos of masks + filters to make a scoring mechanism.

T +23 hours:
Internet crapped out, mouse died, Vue kills the app for some reason. Not good. On the upside I have a Google doc where I'm writing ideas for accessories and filters. Mask images are coming from a canvas now.

T + 26 hours:
Took a dinner break and a power nap. Back on it.

T +29 hours:
Set up a mask stack and corresponding buttons for adding / clearing masks in Vue. I couldn't figure out why duplicates of the same mask were stacking at the same level, instead of being rendered in the order of the mask stack. It turned out that since the draw code relied on loading an image, one mask would load faster than the next in the stack _because it had been loaded before_. So, I turned the stack render method into a self-building promise chain. They're really great for this sort of thing.
